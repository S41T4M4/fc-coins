// <auto-generated />
using System;
using EAFCCoinsManager.Infraestrutura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EAFCCoinsManager.Migrations
{
    [DbContext(typeof(ConnectionContext))]
    partial class ConnectionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EAFCCoinsManager.Models.Carrinho", b =>
                {
                    b.Property<int>("id_carrinho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_carrinho"));

                    b.Property<DateTime>("create_time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("id_user")
                        .HasColumnType("integer");

                    b.HasKey("id_carrinho");

                    b.HasIndex("id_user");

                    b.ToTable("carrinho");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.ItemCarrinho", b =>
                {
                    b.Property<int>("id_item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_item"));

                    b.Property<int>("id_carrinho")
                        .HasColumnType("integer");

                    b.Property<int>("id_moeda")
                        .HasColumnType("integer");

                    b.Property<int>("quantidade")
                        .HasColumnType("integer");

                    b.HasKey("id_item");

                    b.HasIndex("id_carrinho");

                    b.HasIndex("id_moeda");

                    b.ToTable("item_carrinho");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.ItemPedido", b =>
                {
                    b.Property<int>("id_item_pedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_item_pedido"));

                    b.Property<decimal>("Preco_unitario")
                        .HasColumnType("numeric");

                    b.Property<int>("id_moeda")
                        .HasColumnType("integer");

                    b.Property<int>("id_pedido")
                        .HasColumnType("integer");

                    b.Property<int>("quantidade")
                        .HasColumnType("integer");

                    b.HasKey("id_item_pedido");

                    b.HasIndex("id_moeda");

                    b.HasIndex("id_pedido");

                    b.ToTable("item_pedido");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.Moeda", b =>
                {
                    b.Property<int>("id_moeda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_moeda"));

                    b.Property<int>("plataforma_id")
                        .HasColumnType("integer");

                    b.Property<decimal>("quantidade")
                        .HasColumnType("numeric");

                    b.Property<decimal>("valor")
                        .HasColumnType("numeric");

                    b.HasKey("id_moeda");

                    b.HasIndex("plataforma_id");

                    b.ToTable("moeda");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.Pagamento", b =>
                {
                    b.Property<int>("id_pagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_pagamento"));

                    b.Property<DateTime>("data_pag")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("id_pedido")
                        .HasColumnType("integer");

                    b.Property<string>("metodo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("transaction_id")
                        .HasColumnType("integer");

                    b.Property<decimal>("valor_pago")
                        .HasColumnType("numeric");

                    b.HasKey("id_pagamento");

                    b.HasIndex("id_pedido")
                        .IsUnique();

                    b.ToTable("pagamento");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.Pedido", b =>
                {
                    b.Property<int>("id_pedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_pedido"));

                    b.Property<DateTime>("data_pedido")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("id_user")
                        .HasColumnType("integer");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("total")
                        .HasColumnType("numeric");

                    b.HasKey("id_pedido");

                    b.HasIndex("id_user");

                    b.ToTable("pedido");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.Plataforma", b =>
                {
                    b.Property<int>("id_plataforma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_plataforma"));

                    b.Property<string>("descricao_plataforma")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_plataforma");

                    b.ToTable("plataforma");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.Usuarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("data_registro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.Carrinho", b =>
                {
                    b.HasOne("EAFCCoinsManager.Models.Usuarios", "Usuario")
                        .WithMany("Carrinhos")
                        .HasForeignKey("id_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.ItemCarrinho", b =>
                {
                    b.HasOne("EAFCCoinsManager.Models.Carrinho", "Carrinho")
                        .WithMany("Itens")
                        .HasForeignKey("id_carrinho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EAFCCoinsManager.Models.Moeda", "Moeda")
                        .WithMany("ItensCarrinho")
                        .HasForeignKey("id_moeda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrinho");

                    b.Navigation("Moeda");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.ItemPedido", b =>
                {
                    b.HasOne("EAFCCoinsManager.Models.Moeda", "Moeda")
                        .WithMany("ItensPedido")
                        .HasForeignKey("id_moeda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EAFCCoinsManager.Models.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("id_pedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moeda");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.Moeda", b =>
                {
                    b.HasOne("EAFCCoinsManager.Models.Plataforma", "Plataforma")
                        .WithMany("Moedas")
                        .HasForeignKey("plataforma_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plataforma");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.Pagamento", b =>
                {
                    b.HasOne("EAFCCoinsManager.Models.Pedido", "Pedido")
                        .WithOne("Pagamento")
                        .HasForeignKey("EAFCCoinsManager.Models.Pagamento", "id_pedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.Pedido", b =>
                {
                    b.HasOne("EAFCCoinsManager.Models.Usuarios", "Usuarios")
                        .WithMany("Pedidos")
                        .HasForeignKey("id_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.Carrinho", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.Moeda", b =>
                {
                    b.Navigation("ItensCarrinho");

                    b.Navigation("ItensPedido");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.Pedido", b =>
                {
                    b.Navigation("Itens");

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.Plataforma", b =>
                {
                    b.Navigation("Moedas");
                });

            modelBuilder.Entity("EAFCCoinsManager.Models.Usuarios", b =>
                {
                    b.Navigation("Carrinhos");

                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
